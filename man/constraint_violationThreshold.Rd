% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/constraint_stochasticRanking.R,
%   R/constraint_violationThreshold.R
\name{constraint_violationThreshold}
\alias{constraint_violationThreshold}
\alias{constraint_violationThreshold}
\title{"Stochastic Ranking" constraint handling method for MOEA/D}
\usage{
constraint_violationThreshold(B, bigZ, bigV, threshold, ...)

constraint_violationThreshold(B, bigZ, bigV, threshold, ...)
}
\arguments{
\item{B}{Matrix of neighborhoods (generated by \code{define_neighborhood(...))})}

\item{bigZ}{Matrix of scalarized objective values for each neighborhood and the
incumbent solution (generated by \code{scalarize_values})}

\item{bigV}{Matrix of violation values for each neighborhood and the
incumbent solution}

\item{threshold}{A real-valued, non-negative feasibility treshold}

\item{...}{other parameters (unused, included for compatibility with
generic call)}

\item{pf}{A probability value to consider non-feasible solutions as feasible}

\item{B}{Matrix of neighborhoods (generated by \code{define_neighborhood(...))})}

\item{bigZ}{Matrix of scalarized objective values for each neighborhood and the
incumbent solution (generated by \code{scalarize_values})}

\item{bigV}{Matrix of violation values for each neighborhood and the
incumbent solution}

\item{threshold}{A real-valued, non-negative feasibility treshold}

\item{...}{other parameters (unused, included for compatibility with
generic call)}
}
\value{
\link{N x (T+1)} matrix of preference indexes. Each row contains
the T indexes of the candidate solutions in the neighborhood of
a given subproblem, plus a value of T+1 for the incumbent solution for
that subproblem, using the penalty-based constraint handling method.

\link{N x (T+1)} matrix of preference indexes. Each row contains
the T indexes of the candidate solutions in the neighborhood of
a given subproblem, plus a value of T+1 for the incumbent solution for
that subproblem, using the penalty-based constraint handling method.
}
\description{
Uses the Stochastic Ranking Constraint handling method to generate a
preference index.

Uses the Violation Threshold Constraint handling method to generate a
preference index.
}
\details{
This function calculates the preference index of a set of neighborhoods
based on the "Stochastic Ranking" constraint handling method. Please
see {\code{help(order_neighborhood)}} for more information on the
preference index matrix.

We define an individual as "Feasible", if its violation value V is below
a user defined Threshold. Given two individuals a_i and a_j in the same
neighborhood, they are ordered according to the following rule:

\itemize{
\item If both a_i and a_j are feasible OR if U(0,1) <= pf, they are ordered by smallest performance value
\item If either a_i or a_j ar unfeasible AND if U(0,1) > pf, they are ordered by smallest violation value
}

This function calculates the preference index of a set of neighborhoods
based on the "Violation Threshold" constraint handling method. Please
see {\code{help(order_neighborhood)}} for more information on the
preference index matrix.

We define an individual as "Feasible", if its violation value V is below
a user defined Treshold. Also, for each neighborhood we define a Violation
Threshold "ev" as

ev = 1/#neighborhood * #feasible/#neighborhood * sum(violations).

Given two individuals a_i and a_j in the same
neighborhood, they are ordered according to the following rule:

\itemize{
\item If both a_i and a_j are feasible OR if both v(a_i) and v(a_j) <= ev, they are ordered by smallest performance value
\item else they are ordered by smallest violation value
}
}
\section{Parameters}{



}

